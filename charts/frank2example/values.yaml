## @section Frank!Framework parameters
## @descriptionStart
## This chart is a wrapper for the Frank!Framework chart.
## See the documentation for the Frank!Framework chart for more information.
## @descriptionEnd

frankframework:
  ## @param frankframework.image.registry frank2example image registry
  ## @param frankframework.image.repository frank2example image repository
  ## @param frankframework.image.tag frank2example image tag (immutable tags are recommended)
  ## @param frankframework.image.pullPolicy frank2example image pull policy
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  ## @param frankframework.image.pullSecrets frank2example image pull secrets
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - name: myRegistryKeySecretName
  ##
  image:
    registry: nexus.frankframework.org
    repository: frank2example
    tag: "latest"
    pullPolicy: Always
    pullSecrets: []

  application:
    ## @skip frankframework.application.dtap.stage
    ##
    dtap:
      stage: TST

  ## @skip frankframework.environmentVariables
  ##
  environmentVariables:
    application.security.console.authentication.type: NONE
    application.security.testtool.authentication.type: NONE
    jdbc.datasource.default: "jdbc/frank2example"

  ## @skip frankframework.generateSecret
  ##
  generateSecret:
    - name: frankframework-resources
      mountPath: /opt/frank/resources/resources.yml
      subPath: resources.yml
      stringData:
        resources.yml: |-
          jdbc:
            - name: frank2example
              type: org.h2.jdbcx.JdbcDataSource
              url: jdbc:h2:mem:frank2example;NON_KEYWORDS=VALUE;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=0;

  ## @param frankframework.replicaCount Number of Frank!Framework replicas to deploy
  ##
  replicaCount: 1

  ## @param frankframework.securityContext.readOnlyRootFilesystem Set the security context for the Frank!Framework containers
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ##
  securityContext:
    readOnlyRootFilesystem: true
