{{/*
ConfigMap for generating default environment variables for the app
*/}}
{{- define "ff-common.configmap.env.tpl" -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ff-common.fullname" . }}-env
  labels:
    {{- include "ff-common.labels" . | nindent 4 }}
data:
  # Enable Narayana transaction manager
  application.server.type.custom: {{ .Values.frank.server.transactionManager }}
  JAVA_OPTS: -Xmx{{ .Values.frank.memory }} -Xms{{ .Values.frank.memory }}
  TZ: {{ .Values.timeZone }}
  instance.name: {{ include "ff-common.instance.name" .  }}
  dtap.stage: {{ .Values.frank.dtap.stage }}
  dtap.side: {{ .Values.frank.dtap.side }}
  {{- with .Values.frank.configurations.names }}
  configurations.names: {{ join "," . | quote }}
  {{- end }}
  application.security.http.authentication: "{{ .Values.frank.security.http.authentication }}"
  # Reverse proxy/ingress should be used for https
  application.security.http.transportGuarantee: "NONE"
  {{- if .Values.frank.security.http.authentication }}
  {{- with .Values.frank.security.http.activeDirectory.enabled }}
  application.security.http.authenticators: AdAuthenticator
  application.security.http.authenticators.AdAuthenticator.type: AD
  application.security.http.authenticators.AdAuthenticator.baseDn: {{ .baseDn }}
  application.security.http.authenticators.AdAuthenticator.url: {{ .url }}
  servlet.IAF-API.authenticator: AdAuthenticator
  {{- end }}
  {{- end }}
  {{- if .Values.frank.credentials.secret }}
  credentialFactory.class: nl.nn.credentialprovider.PropertyFileCredentialFactory
  credentialFactory.map.properties: /opt/frank/secrets/{{.Values.frank.credentials.key}}
  {{- end }}
  {{- if .Values.frank.environmentVariables }}
  {{- .Values.frank.environmentVariables | toYaml | nindent 2 }}
  {{- end }}
{{- end -}}
{{- define "ff-common.configmap.env" -}}
{{- template "ff-common.util.merge" (append . "ff-common.configmap.env.tpl") -}}
{{- end -}}
